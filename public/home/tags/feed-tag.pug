
feed-tag

	<virtual each={ items}>

		a(href=url)
			.ui.fluid.blue.card
				.image
					img(src=image)
				.content
					.header {title}
					.meta {created}
					.description
						| {content_html}
				.extra.content
					h5.ui.image.header
						img.ui.avatar.image( src= '{ author.avatar }' )
						.content { author.name }
							.sub.header {read_minutes} minute read
		p
	</virtual>

	script.

		init()
		function init() {
			thiz = this
			loadjs.ready(['feed'], function () {
				console.log('sz', feed.items.length)

				nn()
				//add(2)// init

				setTimeout(function(){
					loadjs.done('firstPg')
				},1000/60)
			}) //ready

			loadjs.ready(['style','firstPg'], function () {
				// setup viewport event
				const addEl = document.getElementById('add')
				let observer = new IntersectionObserver(function(e){
					if(e[0].isIntersecting) {
						console.log('I can see the end')
						// add(2) // :-)
					}//fi
				})// observer event
				observer.observe(addEl)
			}) // cssJs
		}

		addFew(c) {// public
			add(c)
		}

		this.items = []
		thiz = this
		function nn() {
			thiz.items = feed.items
			console.log(feed.items)
			thiz.update()
		}

		function add(c) {// add N items
			let $t = $('<div></div>')//detached
			while(c>0) {
				$t = _addOne($t )
				c--
			}
			$('#here').append( $t )
			console.log('done binding')
		}//*()

		cur = 0

		function _addOne($t) {
			let sz = feed.items.length
			if(--sz < cur ) { // array guard
				console.log(feed.items.length, cur)
				console.log('the end')
				return $t
			}
			let item =  $.extend({}, feed.items[cur++] ) // clone due to ts router
			item.url = '/blog/' + item.url +'/'
			item.image =  item.url + item.image
			console.log(item.image)

		}//()
